;; ugen -> ugen
(define u:abs (mk-unary-operator 5 abs))
(define amp-db (mk-unary-operator 22 s:amp-db))
(define arc-cos (mk-unary-operator 32 acos))
(define arc-sin (mk-unary-operator 31 asin))
(define arc-tan (mk-unary-operator 33 atan))
(define as-float (mk-unary-operator 6 #f))
(define as-int (mk-unary-operator 7 #f))
(define bi-lin-rand (mk-unary-operator 40 #f))
(define bit-not (mk-unary-operator 4 #f))
(define cps-midi (mk-unary-operator 18 s:cps-midi))
(define cps-oct (mk-unary-operator 24 s:cps-oct))
(define ceil (mk-unary-operator 8 ceiling))
(define coin (mk-unary-operator 44 #f))
(define u:cos (mk-unary-operator 29 cos))
(define cos-h (mk-unary-operator 35 #f))
(define cubed (mk-unary-operator 13 s:cubed))
(define db-amp (mk-unary-operator 21 s:db-amp))
(define digit-value (mk-unary-operator 45 #f))
(define distort (mk-unary-operator 42 #f))
(define u:exp (mk-unary-operator 15 exp))
(define u:floor (mk-unary-operator 9 floor))
(define frac (mk-unary-operator 10 #f))
(define han-window (mk-unary-operator 49 #f))
(define is-nil (mk-unary-operator 2 #f))
(define u:log (mk-unary-operator 25 log))
(define log10 (mk-unary-operator 27 s:log10))
(define log2 (mk-unary-operator 26 s:log2))
(define midi-cps (mk-unary-operator 17 s:midi-cps))
(define midi-ratio (mk-unary-operator 19 s:midi-ratio))
(define neg (mk-unary-operator 0 -))
(define u:not (mk-unary-operator 1 #f))
(define not-nil (mk-unary-operator 3 #f))
(define oct-cps (mk-unary-operator 23 s:oct-cps))
(define rand2 (mk-unary-operator 38 #f))
(define ratio-midi (mk-unary-operator 20 s:ratio-midi))
(define recip (mk-unary-operator 16 s:recip))
(define rect-window (mk-unary-operator 48 #f))
(define scurve (mk-unary-operator 53 #f))
(define sign (mk-unary-operator 11 #f))
(define silence (mk-unary-operator 46 #f))
(define u:sin (mk-unary-operator 28 sin))
(define sin-h (mk-unary-operator 34 #f))
(define soft-clip (mk-unary-operator 43 #f))
(define u:sqrt (mk-unary-operator 14 sqrt))
(define squared (mk-unary-operator 12 s:squared))
(define sum3rand (mk-unary-operator 41 #f))
(define u:tan (mk-unary-operator 30 tan))
(define tan-h (mk-unary-operator 36 #f))
(define thru (mk-unary-operator 47 #f))
(define tri-window (mk-unary-operator 51 #f))
(define welch-window (mk-unary-operator 50 #f))
(define lin-rand* (mk-unary-operator 39 #f))
(define ramp* (mk-unary-operator 52 #f))
(define rand* (mk-unary-operator 37 #f))

;; ugen -> ugen -> ugen
(define am-clip (mk-binary-operator 40 #f))
(define abs-dif (mk-binary-operator 38 #f))
(define add (mk-binary-operator 0 +))
(define atan2 (mk-binary-operator 22 #f))
(define bit-and (mk-binary-operator 14 #f))
(define bit-or (mk-binary-operator 15 #f))
(define bit-xor (mk-binary-operator 16 #f))
(define clip2 (mk-binary-operator 42 #f))
(define dif-sqr (mk-binary-operator 34 #f))
(define eq (mk-binary-operator 6 #f))
(define excess (mk-binary-operator 43 #f))
(define exp-rand-range (mk-binary-operator 48 #f))
(define fdiv (mk-binary-operator 4 /))
(define fill (mk-binary-operator 29 #f))
(define first-arg (mk-binary-operator 46 #f))
(define fold2 (mk-binary-operator 44 #f))
(define u:gcd (mk-binary-operator 18 #f))
(define ge (mk-binary-operator 11 s:ge))
(define gt (mk-binary-operator 9 s:gt))
(define hypot (mk-binary-operator 23 #f))
(define hypotx (mk-binary-operator 24 #f))
(define idiv (mk-binary-operator 3 #f))
(define u:lcm (mk-binary-operator 17 #f))
(define le (mk-binary-operator 10 s:le))
(define lt (mk-binary-operator 8 s:lt))
(define u:max (mk-binary-operator 13 max))
(define u:min (mk-binary-operator 12 min))
(define u:mod (mk-binary-operator 5 #f))
(define mul (mk-binary-operator 2 *))
(define ne (mk-binary-operator 7 #f))
(define pow (mk-binary-operator 25 #f))
(define rand-range (mk-binary-operator 47 #f))
(define ring1 (mk-binary-operator 30 #f))
(define ring2 (mk-binary-operator 31 #f))
(define ring3 (mk-binary-operator 32 #f))
(define ring4 (mk-binary-operator 33 #f))
(define u:round (mk-binary-operator 19 #f))
(define round-up (mk-binary-operator 20 #f))
(define scale-neg (mk-binary-operator 41 #f))
(define shift-left (mk-binary-operator 26 #f))
(define shift-right (mk-binary-operator 27 #f))
(define sqr-dif (mk-binary-operator 37 #f))
(define sqr-sum (mk-binary-operator 36 #f))
(define sub (mk-binary-operator 1 -))
(define sum-sqr (mk-binary-operator 35 #f))
(define thresh (mk-binary-operator 39 #f))
(define trunc (mk-binary-operator 21 #f))
(define unsigned-shift (mk-binary-operator 28 #f))
(define wrap2 (mk-binary-operator 45 #f))

(define allpass-c (mk-filter "AllpassC" (in max-dt dt decay) 1))
(define allpass-l (mk-filter "AllpassL" (in max-dt dt decay) 1))
(define allpass-n (mk-filter "AllpassN" (in max-dt dt decay) 1))
(define amp-comp (mk-filter "AmpComp" (freq root exp) 1))
(define amp-comp-a (mk-filter "AmpCompA" (freq root min-amp root-amp) 1))
(define apf (mk-filter "APF" (in freq radius) 1))
(define balance2 (mk-filter "Balance2" (left right pos level) 1))
(define ball (mk-filter "Ball" (in g damp friction) 1))
(define bi-pan-b2 (mk-filter "BiPanB2" (in-a in-b azimuth gain) 3))
(define bpf (mk-filter "BPF" (in freq rq) 1))
(define bpz2 (mk-filter "BPZ2" (in) 1))
(define brf (mk-filter "BRF" (in freq rq) 1))
(define brz2 (mk-filter "BRZ2" (in) 1))
(define buf-allpass-c (mk-filter "BufAllpassC" (buf in dt decay) 1))
(define buf-allpass-l (mk-filter "BufAllpassL" (buf in dt decay) 1))
(define buf-allpass-n (mk-filter "BufAllpassN" (buf in dt decay) 1))
(define buf-comb-c (mk-filter "BufCombC" (buf in dt decay) 1))
(define buf-comb-l (mk-filter "BufCombL" (buf in dt decay) 1))
(define buf-comb-n (mk-filter "BufCombN" (buf in dt decay) 1))
(define buf-delay-c (mk-filter "BufDelayC" (buf in dt) 1))
(define buf-delay-l (mk-filter "BufDelayL" (buf in dt) 1))
(define buf-delay-n (mk-filter "BufDelayN" (buf in dt) 1))
(define buf-wr (mk-filter-mce "BufWr" (bufnum phase loop input-array) 1))
(define clip (mk-filter "Clip" (in lo hi) 1))
(define coin-gate (mk-filter-id "CoinGate" (prob in) 1))
(define comb-c (mk-filter "CombC" (in max-dt dt decay) 1))
(define comb-l (mk-filter "CombL" (in max-dt dt decay) 1))
(define comb-n (mk-filter "CombN" (in max-dt dt decay) 1))
(define compander (mk-filter "Compander" (in ctl thr sl-b sl-a cl-tm rx-tm) 1))
(define compander-d (mk-filter "CompanderD" (in thr sl-b sl-a cl-tm rx-tm) 1))
(define decay (mk-filter "Decay" (in decay-time) 1))
(define decay2 (mk-filter "Decay2" (in attack-time decay-time) 1))
(define decode-b2 (mk-filter-n "DecodeB2" (w x y orientation)))
(define degree-to-key (mk-filter "DegreeToKey" (bufnum in octave) 1))
(define delay-c (mk-filter "DelayC" (in max-dt dt) 1))
(define delay-l (mk-filter "DelayL" (in max-dt dt) 1))
(define delay-n (mk-filter "DelayN" (in max-dt dt) 1))
(define delay1 (mk-filter "Delay1" (in) 1))
(define delay2 (mk-filter "Delay2" (in) 1))
(define demand (mk-filter-k "Demand" (trig reset demand-ugens) 1 0))
(define detect-silence (mk-filter "DetectSilence" (in amp time done-action) 1))
(define disk-out (mk-filter-mce "DiskOut" (bufnum array) 0))
(define done (mk-filter "Done" (src) 1))
(define fold (mk-filter "Fold" (in lo hi) 1))
(define formlet (mk-filter "Formlet" (in freq attacktime decay) 1))
(define fos (mk-filter "FOS" (in a0 a1 b1) 1))
(define free (mk-filter "Free" (in node-id) 1))
(define free-self (mk-filter "FreeSelf" (in) 1))
(define free-self-when-done (mk-filter "FreeSelfWhenDone" (in) 1))
(define free-verb (mk-filter "FreeVerb" (in mix room damp) 1))
(define free-verb2 (mk-filter "FreeVerb2" (in1 in2 mix room damp) 2))
(define gate (mk-filter "Gate" (in trig) 1))
(define hasher (mk-filter "Hasher" (in) 1))
(define hilbert (mk-filter "Hilbert" (in) 2))
(define hpf (mk-filter "HPF" (in freq) 1))
(define hpz1 (mk-filter "HPZ1" (in) 1))
(define hpz2 (mk-filter "HPZ2" (in) 1))
(define image-warp (mk-filter "ImageWarp" (pic x y interpolation-type) 1))
(define in-range (mk-filter "InRange" (in lo hi) 1))
(define in-rect (mk-filter "InRect" (x y rect) 1))
(define index (mk-filter "Index" (bufnum in) 1))
(define integrator (mk-filter "Integrator" (in coef) 1))
(define klank (mk-filter-mce "Klank" (i f-scale f-offset dscale spec) 1))
(define lag (mk-filter "Lag" (in lag-time) 1))
(define lag-control (mk-filter "LagControl" () 1))
(define lag2 (mk-filter "Lag2" (in lag-time) 1))
(define lag3 (mk-filter "Lag3" (in lag-time) 1))
(define last-value (mk-filter "LastValue" (in diff) 1))
(define latch (mk-filter "Latch" (in trig) 1))
(define leak-dc (mk-filter "LeakDC" (in coef) 1))
(define least-change (mk-filter "LeastChange" (a b) 1))
(define limiter (mk-filter "Limiter" (in level dur) 1))
(define lin-exp (mk-filter "LinExp" (in srclo srchi dstlo dsthi) 1))
(define lin-pan2 (mk-filter "LinPan2" (in pos level) 2))
(define lin-x-fade2 (mk-filter "LinXFade2" (in-a in-b pan level) 1))
(define linen (mk-filter "Linen" (gate atk-tm sus-lvl rel-tm done-action) 1))
(define local-out (mk-filter-mce "LocalOut" (array) 0))
(define lpf (mk-filter "LPF" (in freq) 1))
(define lpz1 (mk-filter "LPZ1" (in) 1))
(define lpz2 (mk-filter "LPZ2" (in) 1))
(define mantissa-mask (mk-filter "MantissaMask" (in bits) 1))
(define median (mk-filter "Median" (length in) 1))
(define mid-eq (mk-filter "MidEq" (in freq rq db) 1))
(define moog-ff (mk-filter "MoogFF" (in freq gain reset) 1))
(define most-change (mk-filter "MostChange" (a b) 1))
(define mul-add (mk-filter "MulAdd" (a b c) 1))
(define normalizer (mk-filter "Normalizer" (in level dur) 1))
(define offset-out (mk-filter-mce "OffsetOut" (bus inputs) 0))
(define one-pole (mk-filter "OnePole" (in coef) 1))
(define one-zero (mk-filter "OneZero" (in coef) 1))
(define out (mk-filter-mce "Out" (bus inputs) 0))
(define pan-az (mk-filter "PanAz" (nc in pos lvl wdth orientation) 1))
(define pan-b (mk-filter "PanB" (in azimuth elevation gain) 3))
(define pan-b2 (mk-filter "PanB2" (in azimuth gain) 3))
(define pan2 (mk-filter "Pan2" (in pos level) 2))
(define pan4 (mk-filter "Pan4" (in xpos ypos level) 4))
(define pause (mk-filter "Pause" (in node-id) 1))
(define pause-self (mk-filter "PauseSelf" (in) 1))
(define pause-self-when-done (mk-filter "PauseSelfWhenDone" (in) 1))
(define peak (mk-filter "Peak" (trig reset) 1))
(define peak-follower (mk-filter "PeakFollower" (in decay) 1))
(define pitch-shift (mk-filter "PitchShift" (in win-sz p-rt p-dp t-dp) 1))
(define pluck (mk-filter "Pluck" (in trig max-dt dt decay coef) 1))
(define poll (mk-filter-mce "Poll" (trig in trig-id label) 0))
(define pulse-count (mk-filter "PulseCount" (trig reset) 1))
(define pulse-divider (mk-filter "PulseDivider" (trig div start) 1))
(define ramp (mk-filter "Ramp" (in lag-time) 1))
(define replace-out (mk-filter-mce "ReplaceOut" (bus inputs) 0))
(define resonz (mk-filter "Resonz" (in freq bwr) 1))
(define rhpf (mk-filter "RHPF" (in freq rq) 1))
(define ringz (mk-filter "Ringz" (in freq decay) 1))
(define rlpf (mk-filter "RLPF" (in freq rq) 1))
(define rotate2 (mk-filter "Rotate2" (x y pos) 2))
(define running-max (mk-filter "RunningMax" (in trig) 1))
(define running-min (mk-filter "RunningMin" (in trig) 1))
(define running-sum (mk-filter "RunningSum" (in numsamp) 1))
(define schmidt (mk-filter "Schmidt" (in lo hi) 1))
(define scope-out (mk-filter-mce "ScopeOut" (input-array bufnum) 0))
(define select (mk-filter-mce "Select" (which array) 1))
(define send-trig (mk-filter "SendTrig" (in id value) 0))
(define set-reset-ff (mk-filter "SetResetFF" (trig reset) 1))
(define shaper (mk-filter "Shaper" (bufnum in) 1))
(define silent (mk-filter-n "Silent" ()))
(define slew (mk-filter "Slew" (in up dn) 1))
(define slope (mk-filter "Slope" (in) 1))
(define sos (mk-filter "SOS" (in a0 a1 a2 b1 b2) 1))
(define spring (mk-filter "Spring" (in spring damp) 1))
(define stepper (mk-filter "Stepper" (trig reset min max step resetval) 1))
(define sum3 (mk-filter "Sum3" (a b c) 1))
(define sum4 (mk-filter "Sum4" (a b c d) 1))
(define sweep (mk-filter "Sweep" (trig rate) 1))
(define t-ball (mk-filter "TBall" (in g damp friction) 1))
(define t-delay (mk-filter "TDelay" (in dur) 1))
(define t-exp-rand (mk-filter-id "TExpRand" (lo hi trig) 1))
(define t-grains (mk-filter-n  "TGrains" (tr b rt c-pos dur pan amp interp)))
(define t-pulse (mk-filter "TPulse" (trig freq width) 1))
(define t-rand (mk-filter-id  "TRand" (lo hi trig) 1))
(define ti-rand (mk-filter-id "TIRand" (lo hi trig) 1))
(define timer (mk-filter "Timer" (trig) 1))
(define toggle-ff (mk-filter "ToggleFF" (trig) 1))
(define trapezoid (mk-filter "Trapezoid" (in a b c d) 1))
(define trig (mk-filter "Trig" (in dur) 1))
(define trig1 (mk-filter "Trig1" (in dur) 1))
(define tw-index (mk-filter-mce "TWindex" (in normalize array) 1))
(define two-pole (mk-filter "TwoPole" (in freq radius) 1))
(define two-zero (mk-filter "TwoZero" (in freq radius) 1))
(define vibrato (mk-filter "Vibrato" (f rt dpth dly onset rvar dvar iphase) 1))
(define wrap (mk-filter "Wrap" (in lo hi) 1))
(define wrap-index (mk-filter "WrapIndex" (bufnum in) 1))
(define x-fade2 (mk-filter "XFade2" (in-a in-b pan level) 1))
(define x-out (mk-filter-mce "XOut" (bus xfade inputs) 0))
(define xy (mk-filter "XY" (xscale yscale xoff yoff rot rate) 1))
(define zero-crossing (mk-filter "ZeroCrossing" (in) 1))

(define amplitude (mk-oscillator "Amplitude" (in atk-tm rel-tm) 1))
(define blip (mk-oscillator "Blip" (freq numharm) 1))
(define brown-noise (mk-oscillator-id "BrownNoise" () 1))
(define buf-channels (mk-oscillator "BufChannels" (buf) 1))
(define buf-dur (mk-oscillator "BufDur" (buf) 1))
(define buf-frames (mk-oscillator "BufFrames" (buf) 1))
(define buf-rate-scale (mk-oscillator "BufRateScale" (buf) 1))
(define buf-rd (mk-oscillator-n "BufRd" (bufnum phase loop interp)))
(define buf-sample-rate (mk-oscillator "BufSampleRate" (buf) 1))
(define buf-samples (mk-oscillator "BufSamples" (buf) 1))
(define c-osc (mk-oscillator "COsc" (bufnum freq beats) 1))
(define clip-noise (mk-oscillator-id "ClipNoise" () 1))
(define crackle (mk-oscillator "Crackle" (chaos-param) 1))
(define cusp-l (mk-oscillator "CuspL" (freq a b xi) 1))
(define cusp-n (mk-oscillator "CuspN" (freq a b xi) 1))
(define demand-env-gen (mk-oscillator "DemandEnvGen" (l d s c g r ls lb ts da) 1))
(define disk-in (mk-oscillator-n "DiskIn" (bufnum)))
(define dust (mk-oscillator-id "Dust" (density) 1))
(define dust2 (mk-oscillator-id "Dust2" (density) 1))
(define duty (mk-oscillator-mce "Duty" (dur reset da lvl) 1))
(define env-gen (mk-oscillator-mce "EnvGen" (g ls lb ts da spec) 1))
(define f-sin-osc (mk-oscillator "FSinOsc" (freq iphase) 1))
(define fb-sine-c (mk-oscillator "FBSineC" (freq im fb a c xi yi) 1))
(define fb-sine-l (mk-oscillator "FBSineL" (freq im fb a c xi yi) 1))
(define fb-sine-n (mk-oscillator "FBSineN" (freq im fb a c xi yi) 1))
(define formant (mk-oscillator "Formant" (fundfreq formfreq bwfreq) 1))
(define gbman-c (mk-oscillator "GbmanC" (freq xi yi) 1))
(define gbman-l (mk-oscillator "GbmanL" (freq xi yi) 1))
(define gbman-n (mk-oscillator "GbmanN" (freq xi yi) 1))
(define gendy1 (mk-oscillator "Gendy1" (ad dd adp ddp mnf mxf as ds ic kn) 1))
(define gendy2 (mk-oscillator "Gendy2" (ad dd adp ddp mnf mxf as ds ic kn a c) 1))
(define gendy3 (mk-oscillator "Gendy3" (ad dd adp ddp f as ds ic kn) 1))
(define gray-noise (mk-oscillator-id "GrayNoise" () 1))
(define henon-c (mk-oscillator "HenonC" (freq a b x0 x1) 1))
(define henon-l (mk-oscillator "HenonL" (freq a b x0 x1) 1))
(define henon-n (mk-oscillator "HenonN" (freq a b x0 x1) 1))
(define impulse (mk-oscillator "Impulse" (freq phase) 1))
(define in (mk-oscillator-n "In" (bus)))
(define key-state (mk-oscillator "KeyState" (key min max lag) 1))
(define klang (mk-oscillator-mce "Klang" (freqscale freqoffset spec-array) 1))
(define latoocarfian-c (mk-oscillator "LatoocarfianC" (freq a b c d xi yi) 1))
(define latoocarfian-l (mk-oscillator "LatoocarfianL" (freq a b c d xi yi) 1))
(define latoocarfian-n (mk-oscillator "LatoocarfianN" (freq a b c d xi yi) 1))
(define lf-clip-noise (mk-oscillator-id "LFClipNoise" (freq) 1))
(define lf-cub (mk-oscillator "LFCub" (freq iphase) 1))
(define lf-noise0 (mk-oscillator-id "LFNoise0" (freq) 1))
(define lf-noise1 (mk-oscillator-id "LFNoise1" (freq) 1))
(define lf-noise2 (mk-oscillator-id "LFNoise2" (freq) 1))
(define lf-par (mk-oscillator "LFPar" (freq iphase) 1))
(define lf-pulse (mk-oscillator "LFPulse" (freq iphase width) 1))
(define lf-saw (mk-oscillator "LFSaw" (freq iphase) 1))
(define lf-tri (mk-oscillator "LFTri" (freq iphase) 1))
(define lfd-clip-noise (mk-oscillator-id "LFDClipNoise" (freq) 1))
(define lfd-noise0 (mk-oscillator-id "LFDNoise0" (freq) 1))
(define lfd-noise1 (mk-oscillator-id "LFDNoise1" (freq) 1))
(define lfd-noise3 (mk-oscillator-id "LFDNoise3" (freq) 1))
(define lin-cong-c (mk-oscillator "LinCongC" (freq a c m xi) 1))
(define lin-cong-l (mk-oscillator "LinCongL" (freq a c m xi) 1))
(define lin-cong-n (mk-oscillator "LinCongN" (freq a c m xi) 1))
(define line (mk-oscillator "Line" (start end dur done-action) 1))
(define logistic (mk-oscillator "Logistic" (chaos-param freq) 1))
(define lorenz-l (mk-oscillator "LorenzL" (freq s r b h xi yi zi) 1))
(define mouse-button (mk-oscillator "MouseButton" (minval maxval lag) 1))
(define mouse-x (mk-oscillator "MouseX" (min max warp lag) 1))
(define mouse-y (mk-oscillator "MouseY" (min max warp lag) 1))
(define noah-noise (mk-oscillator-id "NoahNoise" () 1))
(define osc (mk-oscillator "Osc" (bufnum freq phase) 1))
(define osc-n (mk-oscillator "OscN" (bufnum freq phase) 1))
(define p-sin-grain (mk-oscillator "PSinGrain" (freq dur amp) 1))
(define phasor (mk-oscillator "Phasor" (trig rate start end reset-pos) 1))
(define pink-noise (mk-oscillator-id "PinkNoise" () 1))
(define play-buf (mk-oscillator-n "PlayBuf" (bufnum rate trigger startPos loop doneAction)))
(define pulse (mk-oscillator "Pulse" (freq width) 1))
(define quad-c (mk-oscillator "QuadC" (freq a b c xi) 1))
(define quad-l (mk-oscillator "QuadL" (freq a b c xi) 1))
(define quad-n (mk-oscillator "QuadN" (freq a b c xi) 1))
(define rand-id (mk-oscillator-id "RandID" (id) 1))
(define rand-seed (mk-oscillator-id "RandSeed" (trig seed) 1))
(define record-buf (mk-oscillator-mce "RecordBuf" (bufnum offset recLevel preLevel run loop trigger doneAction inputs) 0))
(define saw (mk-oscillator "Saw" (freq) 1))
(define shared-in (mk-oscillator "SharedIn" () 1))
(define sin-osc (mk-oscillator "SinOsc" (freq phase) 1))
(define sin-osc-fb (mk-oscillator "SinOscFB" (freq feedback) 1))
(define standard-l (mk-oscillator "StandardL" (freq k xi yi) 1))
(define standard-n (mk-oscillator "StandardN" (freq k xi yi) 1))
(define sync-saw (mk-oscillator "SyncSaw" (sync-freq saw-freq) 1))
(define t-duty (mk-oscillator-mce "TDuty" (dur reset done-action level gap) 1))
(define trig-control (mk-oscillator-n "TrigControl" ()))
(define v-osc (mk-oscillator "VOsc" (bufpos freq phase) 1))
(define v-osc3 (mk-oscillator "VOsc3" (bufpos freq1 freq2 freq3) 1))
(define var-saw (mk-oscillator "VarSaw" (freq iphase width) 1))
(define white-noise (mk-oscillator-id "WhiteNoise" () 1))
(define x-line (mk-oscillator "XLine" (start end dur done-action) 1))

(define control-rate (mk-specialized-c "ControlRate" 1 ir))
(define convolution (mk-specialized "Convolution" (in kernel frame-size) 1 ar))
(define convolution2 (mk-specialized "Convolution2" (in b tr frame-size) 1 ar))
(define dbrown (mk-specialized-id "Dbrown" (length lo hi step) 1 dr))
(define dbufrd (mk-specialized-id "Dbufrd" (bufnum phase loop) 1 dr))
(define dgeom (mk-specialized-id "Dgeom" (length start grow) 1 dr))
(define dibrown (mk-specialized-id "Dibrown" (length lo hi step) 1 dr))
(define diwhite (mk-specialized-id "Diwhite" (length lo hi) 1 dr))
(define drand (mk-specialized-mce-id "Drand" (length array) 1 dr))
(define dseq (mk-specialized-mce-id "Dseq" (length array) 1 dr))
(define dser (mk-specialized-mce-id "Dser" (length array) 1 dr))
(define dseries (mk-specialized-id "Dseries" (length start step) 1 dr))
(define dswitch (mk-specialized-mce-id "Dswitch" (length array) 1 dr))
(define dswitch1 (mk-specialized-mce-id "Dswitch1" (length array) 1 dr))
(define dwhite (mk-specialized-id "Dwhite" (length lo hi) 1 dr))
(define dxrand (mk-specialized-mce-id "Dxrand" (length array) 1 dr))
(define exp-rand (mk-specialized-id "ExpRand" (lo hi) 1 ir))
(define fft (mk-specialized "FFT" (buf in hop wintype active winsize) 1 kr))
(define grain-buf (mk-specialized-n "GrainBuf" (tr dur cdrb rt ps i pan envb maxg) ar))
(define grain-fm (mk-specialized-n "GrainFM" (tr dur cf mf indx pan envb maxg) ar))
(define grain-in (mk-specialized-n "GrainIn" (tr dur in pan envbuf maxg) ar))
(define grain-sin (mk-specialized-n "GrainSin" (tr dur freq pan envbuf maxgrains) ar))
(define i-rand (mk-specialized-id "IRand" (lo hi) 1 ir))
(define ifft (mk-specialized "IFFT" (buf wintype winsize) 1 ar))
(define in-feedback (mk-specialized-n "InFeedback" (bus) ar))
(define in-trig (mk-specialized-n "InTrig" (bus) kr))
(define k2a (mk-specialized "K2A" (in) 1 ar))
(define lag-in (mk-specialized-n "LagIn" (bus lag) kr))
(define lin-rand (mk-specialized-id "LinRand" (lo hi minmax) 1 ir))
(define n-rand (mk-specialized-id "NRand" (lo hi n) 1 ir))
(define num-audio-buses (mk-specialized-c "NumAudioBuses" 1 ir))
(define num-buffers (mk-specialized-c "NumBuffers" 1 ir))
(define num-control-buses (mk-specialized-c "NumControlBuses" 1 ir))
(define num-input-buses (mk-specialized-c "NumInputBuses" 1 ir))
(define num-output-buses (mk-specialized-c "NumOutputBuses" 1 ir))
(define num-running-synths (mk-specialized-c "NumRunningSynths" 1 ir))
(define pack-fft (mk-specialized-mce "PackFFT" (b sz fr to z mp) 1 kr))
(define pitch (mk-specialized "Pitch" (in if mnf mxf ef mxb m at pt ds) 2 kr))
(define pv-add (mk-specialized "PV_Add" (buf-a buf-b) 1 kr))
(define pv-bin-scramble (mk-specialized "PV_BinScramble" (b wipe width trig) 1 kr))
(define pv-bin-shift (mk-specialized "PV_BinShift" (b stretch shift) 1 kr))
(define pv-bin-wipe (mk-specialized "PV_BinWipe" (b-a b-b wipe) 1 kr))
(define pv-brick-wall (mk-specialized "PV_BrickWall" (b wipe) 1 kr))
(define pv-conformal-map (mk-specialized "PV_ConformalMap" (b real imag) 1 kr))
(define pv-copy (mk-specialized "PV_Copy" (b-a b-b) 1 kr))
(define pv-copy-phase (mk-specialized "PV_CopyPhase" (b-a b-b) 1 kr))
(define pv-diffuser (mk-specialized "PV_Diffuser" (b trig) 1 kr))
(define pv-hainsworth-foote (mk-specialized "PV_HainsworthFoote" (b h f t w) 1 ar))
(define pv-jensen-andersen (mk-specialized "PV_JensenAndersen" (b c e f s t w) 1 ar))
(define pv-local-max (mk-specialized "PV_LocalMax" (b threshold) 1 kr))
(define pv-mag-above (mk-specialized "PV_MagAbove" (b threshold) 1 kr))
(define pv-mag-below (mk-specialized "PV_MagBelow" (b threshold) 1 kr))
(define pv-mag-clip (mk-specialized "PV_MagClip" (b threshold) 1 kr))
(define pv-mag-freeze (mk-specialized "PV_MagFreeze" (b freeze) 1 kr))
(define pv-mag-mul (mk-specialized "PV_MagMul" () 1 kr))
(define pv-mag-noise (mk-specialized "PV_MagNoise" (b) 1 kr))
(define pv-mag-shift (mk-specialized "PV_MagShift" () 1 kr))
(define pv-mag-smear (mk-specialized "PV_MagSmear" (b bins) 1 kr))
(define pv-mag-squared (mk-specialized "PV_MagSquared" () 1 kr))
(define pv-max (mk-specialized "PV_Max" () 1 kr))
(define pv-min (mk-specialized "PV_Min" () 1 kr))
(define pv-mul (mk-specialized "PV_Mul" () 1 kr))
(define pv-phase-shift (mk-specialized "PV_PhaseShift" (b shift) 1 kr))
(define pv-phase-shift270 (mk-specialized "PV_PhaseShift270" (b) 1 kr))
(define pv-phase-shift90 (mk-specialized "PV_PhaseShift90" (b) 1 kr))
(define pv-rand-comb (mk-specialized "PV_RandComb" (b wipe trig) 1 kr))
(define pv-rand-wipe (mk-specialized "PV_RandWipe" (b-a b-b wipe trig) 1 kr))
(define pv-rect-comb (mk-specialized "PV_RectComb" (b nt phase width) 1 kr))
(define pv-rect-comb2 (mk-specialized "PV_RectComb2" () 1 kr))
(define radians-per-sample (mk-specialized-c "RadiansPerSample" 1 ir))
(define rand (mk-specialized-id "Rand" (lo hi) 1 ir))
(define sample-dur (mk-specialized-c "SampleDur" 1 ir))
(define sample-rate (mk-specialized-c "SampleRate" 1 ir))
(define shared-out (mk-specialized "SharedOut" (bus inputs) 0 kr))
(define subsample-offset (mk-specialized-c "SubsampleOffset" 1 ir))
(define unpack1-fft (mk-specialized "Unpack1FFT" (c b bi wm) 1 dr))
(define warp1 (mk-specialized-n "Warp1" (b ptr fs ws envb ov wrr i) ar))

;; other/subtler...

(define local-in
  (lambda (nc rt def)
    (construct-ugen "LocalIn" rt '() def nc 0 (make-uid 0))))
